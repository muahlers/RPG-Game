{"version":3,"sources":["../../src/routes/main.js"],"names":["tokenList","processLogOutRequested","request","response","cookies","refreshToken","refreshJwt","clearCookie","method","status","json","message","sendFile","root","router","express","Router","get","send","__dirname","post","passport","authenticate","session","next","error","user","Error","login","err","body","_id","email","name","username","token","jwt","sign","process","env","JWT_SECRET","expiresIn","JWT_REFRESH_SECRET","cookie","console","log","route"],"mappings":"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","sourcesContent":["import express from 'express';\nimport passport from 'passport';\nimport jwt from 'jsonwebtoken';\n\nconst tokenList = {};\n\nfunction processLogOutRequested(request, response) {\n  if (request.cookies) {\n    const refreshToken = request.cookies.refreshJwt;\n    if (refreshToken in tokenList) delete tokenList[refreshToken];\n    response.clearCookie('jwt');\n    response.clearCookie('refreshJwt');\n  }\n  if (request.method === 'POST') {\n    response.status(200).json({ message: 'logged out', status: '200' });\n  } else if (request.method === 'GET') {\n    response.sendFile('logout.html', { root: './public' });\n  }\n}\n\n// Creo una instancia de express para manejar rutas llamada Router.\nconst router = express.Router();\n\nrouter.get('/', (request, response) => {\n  // response.send(\"Hello World\");\n  response.send(`${__dirname}/index.html`);\n});\n\nrouter.get('/status', (request, response) => {\n  response.status(200).json({ message: 'ok', status: '200' });\n});\n\nrouter.post('/signup', passport.authenticate('signup', { session: false }), async (request, response) => {\n  response.status(200).json({ message: 'sign up was successful', status: '200' });\n});\n\nrouter.post('/login', async (request, response, next) => {\n  passport.authenticate('login', async (error, user) => {\n    try {\n      if (error) {\n        return next(error);\n      }\n      if (!user) {\n        return next(new Error('email and password are required'));\n      }\n      request.login(user, { session: false }, (err) => {\n        if (err) return next(err);\n\n        // Create jwt\n        const body = {\n          _id: user._id,\n          email: user.email,\n          name: user.username,\n        };\n\n        // Funcion para crea JWT token\n        const token = jwt.sign({ user: body }, process.env.JWT_SECRET, { expiresIn: 300 });\n        const refreshToken = jwt.sign(\n          { user: body },\n          process.env.JWT_REFRESH_SECRET,\n          { expiresIn: 86400 },\n        );\n\n        // Put Tokens in a cookie.\n        response.cookie('jwt', token);\n        response.cookie('refreshJwt', refreshToken);\n\n        // Store Tokens in memeory.\n        tokenList[refreshToken] = {\n          token,\n          refreshToken,\n          email: user.email,\n          _id: user._id,\n          name: user.username,\n        };\n\n        // send Token to the user.\n        return response.status(200).json({ token, refreshToken, status: '200' });\n      });\n    } catch (err) {\n      console.log(err);\n      return next(err);\n    }\n  })(request, response, next);\n});\n\nrouter.route('/logout')\n  .get(processLogOutRequested)\n  .post(processLogOutRequested);\n\nrouter.post('/token', (request, response) => {\n  const { refreshToken } = request.body; // const refreshToken = response.body.refreshToken.\n  if (refreshToken in tokenList) {\n    const body = {\n      email: tokenList[refreshToken].email,\n      _id: tokenList[refreshToken]._id,\n      name: tokenList[refreshToken].name,\n    };\n    const token = jwt.sign({ user: body }, process.env.JWT_SECRET, { expiresIn: 300 });\n\n    // update jwt token\n    response.cookie('jwt', token);\n    tokenList[refreshToken].token = token;\n\n    response.status(200).json({ token, status: '200' });\n  } else {\n    response.status(401).json({ message: 'unauthorized', status: '401' });\n  }\n});\n\nexport default router;\n"],"file":"main.js"}