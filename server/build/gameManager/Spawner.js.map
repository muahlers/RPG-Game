{"version":3,"sources":["../../src/gameManager/Spawner.js"],"names":["getRandomValue","bonusValue","Math","floor","random","length","Spawner","config","spawnLocations","addObject","deleteObject","moveObjects","id","spawnInterval","limit","objectType","spawnerType","objectsCreated","start","interval","setInterval","spawnObject","SpawnerType","MONSTER","moveMonsters","CHEST","spawnChest","spawnMonster","ITEM","spawnItem","randomItem","itemsData","items","location","item","ItemModel","name","frame","push","pickRandomLocation","chest","ChestModel","monster","MonsterModel","invalidLocation","some","obj","x","y","filter","moveMonsterInterval","forEach","move"],"mappings":"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","sourcesContent":["import ChestModel from './ChestModel';\nimport MonsterModel from './MonsterModel';\nimport ItemModel from './ItemModel';\nimport { SpawnerType, randomNumber } from './utils';\nimport * as itemsData from '../../public/assets/level/tools.json';\n\nfunction getRandomValue() {\n  const bonusValue = [-10, -7, -5, 0, 3, 5, 7, 10, 12, 15];\n  return bonusValue[Math.floor(Math.random() * bonusValue.length)];\n}\n\nexport default class Spawner {\n  constructor(config, spawnLocations, addObject, deleteObject, moveObjects) {\n    this.id = config.id;\n    this.spawnInterval = config.spawnInterval;\n    this.limit = config.limit;\n    this.objectType = config.spawnerType;\n    this.spawnLocations = spawnLocations;\n    this.addObject = addObject;\n    this.deleteObject = deleteObject;\n    this.moveObjects = moveObjects;\n\n    this.objectsCreated = [];\n\n    this.start();\n  }\n\n  start() {\n    this.interval = setInterval(() => {\n      if (this.objectsCreated.length < this.limit) {\n        this.spawnObject();\n      }\n    }, this.spawnInterval);\n    if (this.objectType === SpawnerType.MONSTER) this.moveMonsters();\n  }\n\n  spawnObject() {\n    if (this.objectType === SpawnerType.CHEST) {\n      this.spawnChest();\n    } else if (this.objectType === SpawnerType.MONSTER) {\n      this.spawnMonster();\n    } else if (this.objectType === SpawnerType.ITEM) {\n      this.spawnItem();\n    }\n  }\n\n  spawnItem() {\n    const randomItem = itemsData.items[Math.floor(Math.random() * itemsData.items.length)];\n    //const location = this.pickRandomLocation();\n    const location = [150, 220];\n    const item = new ItemModel(\n      location[0], // x\n      location[1], // y\n      this.id, // itemId\n      randomItem.name, // name\n      randomItem.frame, // frame\n      getRandomValue(), // attack\n      getRandomValue(), // defense\n      getRandomValue(), // health\n    );\n    this.objectsCreated.push(item);\n    this.addObject(item.id, item);\n  }\n\n  spawnChest() {\n    const location = this.pickRandomLocation();\n    const chest = new ChestModel(location[0], location[1], randomNumber(10, 20), this.id);\n    this.objectsCreated.push(chest);\n    this.addObject(chest.id, chest);\n  }\n\n  spawnMonster() {\n    const location = this.pickRandomLocation();\n    const monster = new MonsterModel(\n      location[0],\n      location[1],\n      randomNumber(10, 20),\n      this.id,\n      randomNumber(0, 20),\n      randomNumber(100, 150),\n      randomNumber(10, 20),\n    );\n    this.objectsCreated.push(monster);\n    this.addObject(monster.id, monster);\n  }\n\n  pickRandomLocation() {\n    const location = this.spawnLocations[Math.floor(Math.random() * this.spawnLocations.length)];\n    const invalidLocation = this.objectsCreated.some((obj) => {\n      if (obj.x === location[0] && obj.y === location[1]) {\n        return true;\n      }\n      return false;\n    });\n\n    if (invalidLocation) return this.pickRandomLocation();\n    return location;\n  }\n\n  removeObject(id) {\n    this.objectsCreated = this.objectsCreated.filter((obj) => obj.id !== id);\n    this.deleteObject(id);\n  }\n\n  moveMonsters() {\n    this.moveMonsterInterval = setInterval(() => {\n      this.objectsCreated.forEach((monster) => {\n        monster.move();\n      });\n\n      this.moveObjects();\n    }, 1000);\n  }\n}\n"],"file":"Spawner.js"}