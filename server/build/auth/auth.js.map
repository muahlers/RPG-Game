{"version":3,"sources":["../../src/auth/auth.js"],"names":["passport","use","localStrategy","Strategy","usernameField","passwordField","passReqToCallback","request","email","password","done","username","body","UserModel","create","user","findOne","Error","isValidPassword","valid","JwtStrategy","secretOrKey","process","env","JWT_SECRET","jwtFromRequest","token","cookies","jwt"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;AACAA,qBAASC,GAAT,CAAa,QAAb,EAAuB,IAAIC,0BAAcC,QAAlB,CAA2B;AAChDC,EAAAA,aAAa,EAAE,OADiC;AAEhDC,EAAAA,aAAa,EAAE,UAFiC;AAGhDC,EAAAA,iBAAiB,EAAE;AAH6B,CAA3B;AAAA,2FAIpB,iBAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAESC,YAAAA,QAFT,GAEsBJ,OAAO,CAACK,IAF9B,CAESD,QAFT;AAAA;AAAA,mBAGoBE,sBAAUC,MAAV,CAAiB;AAAEN,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,QAAQ,EAARA,QAAT;AAAmBE,cAAAA,QAAQ,EAARA;AAAnB,aAAjB,CAHpB;;AAAA;AAGOI,YAAAA,IAHP;AAAA,6CAIQL,IAAI,CAAC,IAAD,EAAOK,IAAP,CAJZ;;AAAA;AAAA;AAAA;AAAA,6CAMQL,IAAI,aANZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJoB;;AAAA;AAAA;AAAA;AAAA,IAAvB,E,CAcA;;;AACAV,qBAASC,GAAT,CAAa,OAAb,EAAsB,IAAIC,0BAAcC,QAAlB,CAA2B;AAC/CC,EAAAA,aAAa,EAAE,OADgC;AAE/CC,EAAAA,aAAa,EAAE;AAFgC,CAA3B;AAAA,4FAGnB,kBAAOG,KAAP,EAAcC,QAAd,EAAwBC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEoBG,sBAAUG,OAAV,CAAkB;AAAER,cAAAA,KAAK,EAALA;AAAF,aAAlB,CAFpB;;AAAA;AAEOO,YAAAA,IAFP;;AAAA,gBAGMA,IAHN;AAAA;AAAA;AAAA;;AAAA,8CAIUL,IAAI,CAAC,IAAIO,KAAJ,CAAU,gBAAV,CAAD,EAA8B,KAA9B,CAJd;;AAAA;AAAA;AAAA,mBAOqBF,IAAI,CAACG,eAAL,CAAqBT,QAArB,CAPrB;;AAAA;AAOOU,YAAAA,KAPP;;AAAA,gBAQMA,KARN;AAAA;AAAA;AAAA;;AAAA,8CASUT,IAAI,CAAC,IAAIO,KAAJ,CAAU,oBAAV,CAAD,EAAkC,KAAlC,CATd;;AAAA;AAAA,8CAWQP,IAAI,CAAC,IAAD,EAAOK,IAAP,CAXZ;;AAAA;AAAA;AAAA;AAAA,8CAaQL,IAAI,cAbZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHmB;;AAAA;AAAA;AAAA;AAAA,IAAtB,E,CAoBA;;;AACAV,qBAASC,GAAT,CAAa,KAAb,EAAoB,IAAImB,wBAAYjB,QAAhB,CAAyB;AAC3CkB,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADkB;AAE3CC,EAAAA,cAAc,EAAE,wBAAClB,OAAD,EAAa;AAC3B,QAAImB,KAAK,GAAG,IAAZ;AACA,QAAInB,OAAO,IAAIA,OAAO,CAACoB,OAAvB,EAAgCD,KAAK,GAAGnB,OAAO,CAACoB,OAAR,CAAgBC,GAAxB;AAChC,WAAOF,KAAP;AACD;AAN0C,CAAzB;AAAA,4FAOjB,kBAAOA,KAAP,EAAchB,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEQA,IAAI,CAAC,IAAD,EAAOgB,KAAK,CAACX,IAAb,CAFZ;;AAAA;AAAA;AAAA;AAAA,8CAIQL,IAAI,cAJZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAPiB;;AAAA;AAAA;AAAA;AAAA,IAApB","sourcesContent":["import passport from 'passport';\nimport localStrategy from 'passport-local';\nimport JwtStrategy from 'passport-jwt';\n\nimport UserModel from '../models/userModel';\n\n// handler user registration\npassport.use('signup', new localStrategy.Strategy({\n  usernameField: 'email',\n  passwordField: 'password',\n  passReqToCallback: true,\n}, async (request, email, password, done) => {\n  try {\n    const { username } = request.body;\n    const user = await UserModel.create({ email, password, username });\n    return done(null, user);\n  } catch (error) {\n    return done(error);\n  }\n}));\n\n// handler user login\npassport.use('login', new localStrategy.Strategy({\n  usernameField: 'email',\n  passwordField: 'password',\n}, async (email, password, done) => {\n  try {\n    const user = await UserModel.findOne({ email });\n    if (!user) {\n      return done(new Error('user not found'), false);\n    }\n    // Metodo de la clases User Scheme\n    const valid = await user.isValidPassword(password);\n    if (!valid) {\n      return done(new Error('password incorrect'), false);\n    }\n    return done(null, user);\n  } catch (error) {\n    return done(error);\n  }\n}));\n\n// verify JWT token\npassport.use('jwt', new JwtStrategy.Strategy({\n  secretOrKey: process.env.JWT_SECRET,\n  jwtFromRequest: (request) => {\n    let token = null;\n    if (request && request.cookies) token = request.cookies.jwt;\n    return token;\n  },\n}, async (token, done) => {\n  try {\n    return done(null, token.user);\n  } catch (error) {\n    return done(error);\n  }\n}));\n"],"file":"auth.js"}